spring:
  r2dbc:
    url: r2dbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      ssl: true
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 2

# JWT Configuration for Production
jwt:
  secret: ${JWT_SECRET}
  expiration-ms: ${JWT_EXPIRATION_MS:3600000}  # 1 hour in production
  refresh-expiration-ms: ${JWT_REFRESH_EXPIRATION_MS:604800000}  # 7 days

# Auth Configuration for Production
auth:
  max-login-attempts: ${AUTH_MAX_LOGIN_ATTEMPTS:5}
  account-lock-duration-minutes: ${AUTH_ACCOUNT_LOCK_DURATION:30}

# Security Configuration
server:
  ssl:
    enabled: ${SSL_ENABLED:false}
    key-store: ${SSL_KEY_STORE:}
    key-store-password: ${SSL_KEY_STORE_PASSWORD:}
    key-store-type: ${SSL_KEY_STORE_TYPE:PKCS12}

# Logging Configuration for Production
logging:
  level:
    com.iam.auth: INFO
    org.springframework.security: WARN
  file:
    name: /var/log/iam-auth-service/application.log
    max-size: 100MB
    max-history: 30

# Management endpoints for production (restricted)
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized