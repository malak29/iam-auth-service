server:
  port: 8082

spring:
  application:
    name: iam-auth-service

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/iam_db}
    username: ${DB_USERNAME:iam_user}
    password: ${DB_PASSWORD:your_password}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:your-super-secret-jwt-key-that-should-be-at-least-256-bits}
  expiration-ms: ${JWT_EXPIRATION_MS:86400000}  # 24 hours
  refresh-expiration-ms: ${JWT_REFRESH_EXPIRATION_MS:604800000}  # 7 days

# Auth Configuration
auth:
  max-login-attempts: ${AUTH_MAX_LOGIN_ATTEMPTS:5}
  account-lock-duration-minutes: ${AUTH_ACCOUNT_LOCK_DURATION:30}
  password-reset-token-expiry-hours: ${AUTH_PASSWORD_RESET_EXPIRY:1}
  email-verification-token-expiry-hours: ${AUTH_EMAIL_VERIFICATION_EXPIRY:24}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

logging:
  level:
    com.iam.auth: INFO
    org.springframework.security: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"